// ESTABLISH CONNECTION TO IPFS PEER
var ipfs = window.IpfsApi('192.168.1.34', '5001');

// DIRECTORY URL
const validCID = 'QmUfiUfPtE8Yv6tim9bFSanQrZMJR7NgH4ACgeU2zbQwJE';

var build = {};
parseDir(validCID);

// PARSE DIRECTORY
function parseDir(_hash) {

   // ASYNC PROMISE
   promisify('dir', _hash).then(function(files) {

      // CONTENT TYPES
      var types = ['dir', 'file'];

      // LOOP ONE TYPE AT A TIME
      for (var x = 0; x < types.length; x++) {
         files.forEach((file) => {

            // PARENT
            var parent = file.type + '/' + file.name;
            
            build[parent] = {
               type: file.type,
               hash: file.hash
            };

            childDir(file.hash, build[parent]);
         });
      }

   });

   log(build);
}

// PARSE CHILD DIRECTORY
function childDir(_hash, _parent) {
   promisify('dir', _hash).then(function(files) {
      files.forEach((file) => {

         // CHILD
         var child = file.name;

         _parent[child] = {
            type: file.type,
            hash: file.hash
         };

         if (file.type == 'dir') {
            childDir(file.hash, _parent[child]);
         }
      });
   });
}

// WRAP BLOCKCHAIN QUERIES INTO PROMISES
function promisify(query, value = null) {
   return new Promise(function(resolve, reject) {
 
      switch(query) {
 
         // FETCH IPFS DIRECTORY CONTENT
         case 'dir':
            ipfs.ls(value, function (err, files) {
               resolve(files);
            });
         break;

         // FETCH IPFS FILE
         case 'file':
            ipfs.files.cat(value, function (err, file) {
               resolve(file);
            });
         break;
 
         // FALLBACK
         default:
            log('Error in Promisify Switch.')
         break;
      }
 
   });
}

function log(stuff) {
   console.log(stuff);
}

// HASH BASED ON JSON CONTENT
function contentHash(obj) {
   var string = JSON.stringify(obj);
   var string = vkbeautify.jsonmin(string);
   var string = md5(string);

   return string;
}